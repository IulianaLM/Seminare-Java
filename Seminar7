import java.util.ArrayList;
import java.util.Objects;
import java.util.Random;

//varianta1
class FirNumarare extends Thread{

    static  volatile long idCastigator= -1;
    static final Object lock = new Object();

    @Override
    public void run() {
        try{
            for(var i=1;i<=100;i++){
                Thread.sleep(
                        1+ new Random(42).nextInt(100));
                synchronized (lock){
                    if(idCastigator >= 0){
                        System.out.printf("#%d: am pierdut... %n",getId(),i);
                        return;
                    }
                };
                
                System.out.printf("#%d: %d%n",getId(),i);
            }
            synchronized (lock){
                idCastigator= getId();

            }

        }catch(InterruptedException e){}

    }
}

public class Main {
    public static void main(String[] args) {
        var fire= new ArrayList<FirNumarare>();
        for(int i = 0; i < 10; i++){
            var fir= new FirNumarare();
            fir.start();
            fire.add(fir);
        }
        //verif daca exista unul care sa indeplineasca
        //  conditia si apoi se afiseaza mesajul
        while(fire.stream().anyMatch(f-> f.isAlive())){}
        System.out.println("GATA A castigat " + FirNumarare.idCastigator);


    }
}
